<sequence xmlns="http://ws.apache.org/ns/synapse" name="getJiraAssignedReportBugSummary" trace="disable">
  <!-- bug statuses are passed in the uri as a string array -->
  <property xmlns:ns="http://org.apache.synapse/xsd" expression="get-property('uri.var.bugStatuses')" name="bugStatusesArray" scope="default" type="STRING"/>
  <!-- string array is converted to json array and set as the payload -->
  <script language="js"><![CDATA[var a = mc.getProperty('bugStatusesArray');
      var bugStatusesArray = eval('('+a+')');
      var bugStatuses = {bugStatuses:bugStatusesArray};
      mc.setPayloadJSON(bugStatuses);]]></script>
  <!-- iterate for each bug status in the JSON payload array -->
  <iterate xmlns:ns="http://org.apache.synapse/xsd" expression="//bugStatuses" id="ITR_AGG" sequential="true">
    <target>
      <sequence>
        <property expression="//bugStatuses" name="bugStatus" scope="default" type="STRING"/>
        <!-- for assigned and reported bugs the payload to be sent is different -->
        <filter xpath="get-property('bugStatus')='Assigned'">
          <then>
            <payloadFactory media-type="json">
              <format>
                                {
                                  "jql": "issuetype = Bug AND assignee in ('$1')",
                                  "startAt": 0,
                                  "maxResults": 0
                                }
                            </format>
              <args>
                <arg evaluator="xml" expression="get-property('uri.var.engineerEmail')"/>
              </args>
            </payloadFactory>
          </then>
          <else>
            <filter xpath="get-property('bugStatus')='Reported'">
              <then>
                <payloadFactory media-type="json">
                  <format>
                                        {
                                          "jql": "issuetype = Bug AND reporter in ('$1')",
                                          "startAt": 0,
                                          "maxResults": 0
                                        }
                                    </format>
                  <args>
                    <arg evaluator="xml" expression="get-property('uri.var.engineerEmail')"/>
                  </args>
                </payloadFactory>
              </then>
              <else>
                <payloadFactory media-type="json">
                  <format>
                                        {
                                          "jql": "issuetype = Bug AND status = '$1' AND assignee in ('$2')",
                                          "startAt": 0,
                                          "maxResults": 0
                                        }
                                    </format>
                  <args>
                    <arg evaluator="xml" expression="get-property('bugStatus')"/>
                    <arg evaluator="xml" expression="get-property('uri.var.engineerEmail')"/>
                  </args>
                </payloadFactory>
              </else>
            </filter>
          </else>
        </filter>
        <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
        <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
        <call>
          <endpoint key="jiraSearchEndpoint"/>
        </call>
        <!-- get the bug count for each bug status and construct a xml payload -->
        <!-- <bugSummary> <bugStatus> </bugStatus> <bugCount> </bugCount> </bugSummary> -->
        <script language="js"><![CDATA[mc.setPayloadXML(
                    <bugSummary>
                      <bugStatus>{mc.getProperty("bugStatus")} </bugStatus>
                      <bugCount>{ mc.getPayloadJSON().total.toString()}</bugCount>
                    </bugSummary>
                  );]]></script>
        <loopback/>
      </sequence>
    </target>
  </iterate>
</sequence>